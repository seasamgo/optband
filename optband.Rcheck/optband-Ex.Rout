
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "optband"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('optband')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("cumhaz.var")
> ### * cumhaz.var
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cumhaz.var
> ### Title: Variance of the cumulative-hazard function
> ### Aliases: cumhaz.var
> ### Keywords: internal
> 
> ### ** Examples
> 
> 
> library(survival)
> fit <- survfit(Surv(stop, event) ~ 1, data=bladder)
> cumhaz.var(fit)
 [1] 0.008902077 0.035303436 0.066644335 0.073859342 0.088971125 0.112899340
 [7] 0.121097742 0.129648727 0.147121137 0.156312438 0.161361443 0.187202807
[13] 0.197826479 0.203376956 0.233518800 0.264971159 0.297821400 0.304567432
[19] 0.328488633 0.345320316 0.353863030 0.380552024 0.428916178 0.496316317
[25] 0.519846543 0.577201468 0.664587096 0.683664641 0.745445380 0.800640185
[31] 0.800640185 0.831188253 0.831188253 0.904980982 0.904980982 0.904980982
[37] 0.956170383 1.014270178 1.014270178 1.014270178 1.014270178 1.014270178
[43] 1.171531973 1.400951676 1.400951676 1.400951676 1.400951676 2.136882412
[49] 2.136882412 2.136882412 2.136882412
> 
> 
> 
> 
> cleanEx()

detaching ‘package:survival’

> nameEx("modify.surv.fun")
> ### * modify.surv.fun
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: modify.surv.fun
> ### Title: Truncate 'survfit' object
> ### Aliases: modify.surv.fun
> ### Keywords: internal
> 
> ### ** Examples
> 
> library(survival)
> fit <- survfit(Surv(stop, event) ~ 1, data=bladder)
> fit2 <- modify.surv.fun(fit, .1, .9)
> 
> 
> 
> 
> cleanEx()

detaching ‘package:survival’

> nameEx("opt.ci")
> ### * opt.ci
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: opt.ci
> ### Title: Confidence bands optimized by area
> ### Aliases: opt.ci
> 
> ### ** Examples
> 
> library(survival)
> # fit and plot a Kaplan-Meier curve
> fit <- survfit(Surv(stop, event) ~ 1, data=bladder)
> plot(fit)
> fit2 <- opt.ci(fit)
> plot(fit2)
> 
> 
> 
> 
> cleanEx()

detaching ‘package:survival’

> nameEx("psi")
> ### * psi
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: psi
> ### Title: The psi function
> ### Aliases: psi
> ### Keywords: internal
> 
> ### ** Examples
> 
> psi(.1)
[1] 2.544165
> 
> 
> 
> 
> cleanEx()
> nameEx("riemsum")
> ### * riemsum
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: riemsum
> ### Title: Modified vector dot product
> ### Aliases: riemsum
> ### Keywords: internal
> 
> ### ** Examples
> 
> x <- 1:10
> riemsum(x,x)
[1] 45
> 
> 
> 
> 
> cleanEx()
> nameEx("surv.range")
> ### * surv.range
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: surv.range
> ### Title: Evaluate whether times are in an interval
> ### Aliases: surv.range
> ### Keywords: internal
> 
> ### ** Examples
> 
> library(survival)
> fit <- survfit(Surv(stop, event) ~ 1, data=bladder)
> summary(fit)
Call: survfit(formula = Surv(stop, event) ~ 1, data = bladder)

 time n.risk n.event survival std.err lower 95% CI upper 95% CI
    1    340       3    0.991 0.00507        0.981        1.000
    2    325       8    0.967 0.00985        0.948        0.986
    3    317       9    0.939 0.01315        0.914        0.965
    4    308       2    0.933 0.01375        0.907        0.961
    5    302       4    0.921 0.01490        0.892        0.951
    6    295       6    0.902 0.01644        0.870        0.935
    7    289       2    0.896 0.01691        0.863        0.930
    8    283       2    0.890 0.01737        0.856        0.924
    9    281       4    0.877 0.01824        0.842        0.913
   10    273       2    0.870 0.01866        0.835        0.908
   11    260       1    0.867 0.01889        0.831        0.905
   12    259       5    0.850 0.01995        0.812        0.890
   13    254       2    0.844 0.02035        0.805        0.885
   14    248       1    0.840 0.02055        0.801        0.882
   15    240       5    0.823 0.02156        0.782        0.866
   16    235       5    0.805 0.02248        0.762        0.851
   17    230       5    0.788 0.02332        0.743        0.835
   18    225       1    0.784 0.02347        0.740        0.832
   19    208       3    0.773 0.02403        0.727        0.822
   20    202       2    0.765 0.02439        0.719        0.815
   21    200       1    0.761 0.02457        0.715        0.811
   22    197       3    0.750 0.02509        0.702        0.801
   23    190       5    0.730 0.02593        0.681        0.783
   24    177       6    0.705 0.02695        0.655        0.760
   25    171       2    0.697 0.02726        0.646        0.753
   26    156       4    0.679 0.02799        0.627        0.736
   27    142       5    0.655 0.02897        0.601        0.715
   28    134       1    0.650 0.02917        0.596        0.710
   29    130       3    0.635 0.02975        0.580        0.697
   30    112       2    0.624 0.03029        0.567        0.686
   32    106       1    0.618 0.03057        0.561        0.681
   35     97       2    0.605 0.03124        0.547        0.670
   38     82       1    0.598 0.03172        0.539        0.664
   40     77       1    0.590 0.03224        0.530        0.657
   46     47       1    0.578 0.03391        0.515        0.648
   47     39       1    0.563 0.03614        0.496        0.638
   51     22       1    0.537 0.04260        0.460        0.628
> surv.range(fit, .1, .9)
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[49] FALSE FALSE FALSE
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.344 0.054 1.407 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
